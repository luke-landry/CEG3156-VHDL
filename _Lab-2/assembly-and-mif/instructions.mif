DEPTH = 256;
WIDTH = 32;

ADDRESS_RADIX = HEX;
DATA_RADIX = HEX;

CONTENT
BEGIN

-- Use no operations (nop) for default instructions
[00..FF]: 00000000;-- nop(add $t1, $t1, $t1)-- Place MIPS instruction here

-- notes:
-- funct sets f5f4=10 even if they are not used by the ALU, so for example funct = 100010 -> sub
-- assembly r-format argument order: op rd rs rt ...
-- MIPS argument order:     op rs rt rd ...
-- register $0 (address 00000) should be hardwired to 0

00: 8C020000; --lw $2, 0($0) memory(00)=55 -> [1000|11][00|000][0|0010|][0000|0000|0000|0000]
04: 8C030001; --lw $3, 1($0) memory(01)=AA -> [1000|11][00|000][0|0011][0000|0000|0000|0001]
08: 00430822; --sub $1, $2, $3 -> [0000|00][00|010][0|0011|][0000|1][000|00][10|0010]
0C: 00232025; --or $4, $1, $3 -> [0000|00][00|001][0|0011|][0010|0][000|00][10|0101]
10: AC040003; --sw $4, 3($0) -> [1010|11][00|000][0|0100|][0000|0000|0000|0011]
14: 00430820; --add $1, $2, $3 -> [0000|00][00|010][0|0011|][0000|1][000|00][10|0000]
18: AC010004; --sw $1, 4($0) -> [1010|11][00|000][0|0001|][0000|0000|0000|0100]
1C: 8C020003; --lw $2, 3($0) -> [1000|11][00|000][0|0010|][0000|0000|0000|0011]
20: 8C030004; --lw $3, 4($0) -> [1000|11][00|000][0|0011][0000|0000|0000|0100]
24: 0800000B; --j 11 -> [0000|10][00|0000|0000|0000|0000|0000|1011]
28: 1021FFD4; --beq $1, $1,-44 -> [0001|00][00|001][0|0001][1111|1111|1101|0100]
2C: 1022FFF8; --beq $1, $2,-8 -> [0001|00][00|001][0|0010][1111|1111|1111|1000]

END;